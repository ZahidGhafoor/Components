{"ast":null,"code":"var _jsxFileName = \"F:\\\\PROGRAMMING\\\\Coding\\\\React.js\\\\my exercise\\\\instaprint\\\\src\\\\React\\\\SignUp.jsx\";\nimport React, { useState } from \"react\";\nimport { NavLink, Route, useLocation } from 'react-router-dom'; // import axois from \"axios\";\n\nimport { Typography, Button, Grid, Checkbox, TextField, OutlinedInput, FormControl, InputLabel, InputAdornment, IconButton } from \"@material-ui/core\";\nimport Show from '@material-ui/icons/Visibility';\nimport Hide from '@material-ui/icons/VisibilityOff';\nimport SharpIcon from '@material-ui/icons/SendSharp';\nimport BlockIcon from '@material-ui/icons/BlockSharp'; // import Phone from \"material-ui-phone-number\";\n\nimport { makeStyles } from '@material-ui/core/styles'; // import Register from './BackEnd_Connection/SignUp_API';\n// CSS :\n\nimport \"./SignUp.scss\"; // import { RegisterHeader } from \"../env\";\n\nconst Style = makeStyles({\n  btn: {\n    margin: \"0.5rem 0\",\n    width: \"100%\",\n    background: \"red\",\n    height: \"3rem\",\n    color: \"#fff\",\n    \"&:hover\": {\n      color: \"red\",\n      transition: \".5s ease-in-out\"\n    }\n  },\n  logbtn: {\n    color: \"yellow\",\n    fontWeight: \"bolder\",\n    margin: \"0 5px\",\n    \"&:hover\": {\n      color: \"black\"\n    }\n  },\n  disbtn: {\n    background: \"rgb(0,0,0, 0.38)\",\n    width: \"100%\",\n    height: \"3rem\"\n  },\n  error: {\n    color: \"red\",\n    width: \"100%\",\n    textAlign: \"center\",\n    fontSize: \"smaller\"\n  }\n});\n\nconst SignUp = () => {\n  const classes = Style(); // Form Data Control :\n\n  const [enteredData, updateEnteredData] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [error, updateError] = useState({\n    firstnameError: \"\",\n    lastnameError: \"\",\n    emailError: \"\",\n    passwordError: \"\",\n    confirmPasswordError: \"\"\n  });\n\n  const enteringData = event => {\n    const {\n      value,\n      name\n    } = event.target;\n\n    switch (name) {\n      case \"firstname\":\n        updateEnteredData(preValue => {\n          return { ...preValue,\n            [name]: value\n          };\n        });\n\n        if (!enteredData.firstname || enteredData.firstname.length < 3) {\n          updateError(preValue => {\n            return { ...preValue,\n              firstnameError: \"First Name Must be more than 3 Characters\"\n            };\n          });\n        } else {\n          updateError(preValue => {\n            return { ...preValue,\n              firstnameError: \"\"\n            };\n          });\n        }\n\n        break;\n\n      case \"lastname\":\n        updateEnteredData(preValue => {\n          return { ...preValue,\n            [name]: value\n          };\n        });\n\n        if (!enteredData.lastname || enteredData.lastname.length < 3) {\n          updateError(preValue => {\n            return { ...preValue,\n              lastnameError: \"Last Name Must be more than 3 Characters\"\n            };\n          });\n        } else {\n          updateError(preValue => {\n            return { ...preValue,\n              lastnameError: \"\"\n            };\n          });\n        }\n\n        break;\n\n      case \"email\":\n        updateEnteredData(preValue => {\n          return { ...preValue,\n            [name]: value\n          };\n        });\n\n        if (/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(enteredData.email)) {\n          updateError(preValue => {\n            return { ...preValue,\n              emailError: \"\"\n            };\n          });\n        } else {\n          updateError(preValue => {\n            return { ...preValue,\n              emailError: \"Invalid Email\"\n            };\n          });\n        }\n\n        break;\n\n      case \"password\":\n        updateEnteredData(preValue => {\n          return { ...preValue,\n            [name]: value\n          };\n        });\n\n        if (!enteredData.password || enteredData.password.length < 8) {\n          updateError(preValue => {\n            return { ...preValue,\n              passwordError: \"Password Must be more than 8 Characters\"\n            };\n          });\n        } else {\n          updateError(preValue => {\n            return { ...preValue,\n              passwordError: \"\"\n            };\n          });\n        }\n\n        break;\n\n      case \"confirmPassword\":\n        updateEnteredData(preValue => {\n          return { ...preValue,\n            [name]: value\n          };\n        });\n\n        if (enteredData.confirmPassword !== enteredData.password) {\n          updateError(preValue => {\n            return { ...preValue,\n              confirmPasswordError: \"Password did not Match\"\n            };\n          });\n        } else {\n          updateError(preValue => {\n            return { ...preValue,\n              confirmPasswordError: \"\"\n            };\n          });\n        }\n\n        break;\n\n      default:\n        console.log(\"Sonthing went wrong\");\n        break;\n    }\n  }; // Show Hide Password :\n\n\n  const [showPV, updateShowPV] = useState({\n    showP: false\n  });\n  const [showCPV, updateShowCPV] = useState({\n    showCP: false\n  });\n\n  const clikShowP = () => {\n    updateShowPV({\n      showP: !showPV.showP\n    });\n  };\n\n  const clikShowCP = () => {\n    updateShowCPV({\n      showCP: !showCPV.showCP\n    });\n  };\n\n  const submit = data => {\n    data.preventDefault();\n    updateEnteredData({\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    });\n  }; // ------------------------USER REGISTER------------------------\n  // const userRegister = async () => {\n  //   await axois({\n  //     method: \"post\",\n  //     url: \"http://127.0.01:8000/api/register/\",\n  //     // headers: RegisterHeader,\n  //     data: {\n  //       \"username\": enteredData.firstname,\n  //       \"password\": enteredData.password,\n  //       \"first_name\": enteredData.firstname,\n  //       \"last_name\": enteredData.lastname,\n  //       \"email\": enteredData.email\n  //     }\n  //   }).then((res) => {\n  //     console.log(\"The Register DATA = \", res)\n  //   })\n  // }\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login_btn_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/login\",\n    style: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"logbtn\",\n    variant: \"contained\",\n    endIcon: /*#__PURE__*/React.createElement(SharpIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 38\n      }\n    }),\n    className: classes.btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 25\n    }\n  }, \"Already Have an Account \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.logbtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 53\n    }\n  }, \" LOG IN\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, \"SIGN-UP\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submit,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"First Name\",\n    variant: \"outlined\",\n    name: \"firstname\",\n    value: enteredData.firstname,\n    onChange: enteringData,\n    style: {\n      margin: \".5rem 0\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }, \" \", error.firstnameError, \" \"), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Last Name\",\n    variant: \"outlined\",\n    name: \"lastname\",\n    value: enteredData.lastname,\n    onChange: enteringData,\n    style: {\n      width: \"100%\",\n      margin: \"0.5rem 0rem 1rem 0rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      paddingBottom: \"0.5rem\"\n    },\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, \" \", error.lastnameError, \" \"), /*#__PURE__*/React.createElement(Phone, {\n    variant: \"outlined\",\n    defaultCountry: 'pk',\n    onlyCountries: ['pk'],\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Email\",\n    variant: \"outlined\",\n    name: \"email\",\n    value: enteredData.email,\n    onChange: enteringData,\n    style: {\n      width: \"100%\",\n      margin: \"1rem 0 0.5rem 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }\n  }, \" \", error.emailError, \" \"), /*#__PURE__*/React.createElement(FormControl, {\n    style: {\n      margin: \"0.5rem 0\",\n      width: \"100%\"\n    },\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n    name: \"password\",\n    value: enteredData.password,\n    onChange: enteringData,\n    type: showPV.showP ? \"text\" : \"password\",\n    labelWidth: 70,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      edge: \"end\",\n      onClick: clikShowP,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }\n    }, showPV.showP ? /*#__PURE__*/React.createElement(Show, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 39\n      }\n    }) : /*#__PURE__*/React.createElement(Hide, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 50\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }, \" \", error.passwordError, \" \"), /*#__PURE__*/React.createElement(FormControl, {\n    style: {\n      margin: \"0.5rem 0\",\n      width: \"100%\"\n    },\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n    name: \"confirmPassword\",\n    value: enteredData.confirmPassword,\n    onChange: enteringData,\n    type: showCPV.showCP ? \"text\" : \"password\",\n    labelWidth: 130,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      edge: \"end\",\n      onClick: clikShowCP,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 21\n      }\n    }, showCPV.showCP ? /*#__PURE__*/React.createElement(Show, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(Hide, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 52\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }\n  }, \" \", enteredData.confirmPassword !== enteredData.password ? \"Password did not Match\" : \"\", \" \"), enteredData.firstname && enteredData.lastname && enteredData.email && enteredData.password && enteredData.confirmPassword && !error.firstnameError && !error.lastnameError && !error.emailError && !error.passwordError && enteredData.confirmPassword == enteredData.password ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    endIcon: /*#__PURE__*/React.createElement(SharpIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 30\n      }\n    }),\n    className: classes.btn // onClick={userRegister}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 19\n    }\n  }, \"SIGN UP\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    disabled: true,\n    endIcon: /*#__PURE__*/React.createElement(BlockIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 28\n      }\n    }),\n    className: classes.disbtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 17\n    }\n  }, \"SIGN UP\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["F:/PROGRAMMING/Coding/React.js/my exercise/instaprint/src/React/SignUp.jsx"],"names":["React","useState","NavLink","Route","useLocation","Typography","Button","Grid","Checkbox","TextField","OutlinedInput","FormControl","InputLabel","InputAdornment","IconButton","Show","Hide","SharpIcon","BlockIcon","makeStyles","Style","btn","margin","width","background","height","color","transition","logbtn","fontWeight","disbtn","error","textAlign","fontSize","SignUp","classes","enteredData","updateEnteredData","firstname","lastname","email","password","confirmPassword","updateError","firstnameError","lastnameError","emailError","passwordError","confirmPasswordError","enteringData","event","value","name","target","preValue","length","test","console","log","showPV","updateShowPV","showP","showCPV","updateShowCPV","showCP","clikShowP","clikShowCP","submit","data","preventDefault","textDecoration","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { NavLink, Route, useLocation } from 'react-router-dom';\r\n// import axois from \"axios\";\r\nimport {\r\n  Typography, Button, Grid, Checkbox, TextField, OutlinedInput,\r\n  FormControl, InputLabel, InputAdornment, IconButton\r\n} from \"@material-ui/core\"\r\nimport Show from '@material-ui/icons/Visibility';\r\nimport Hide from '@material-ui/icons/VisibilityOff';\r\nimport SharpIcon from '@material-ui/icons/SendSharp';\r\nimport BlockIcon from '@material-ui/icons/BlockSharp';\r\n\r\n// import Phone from \"material-ui-phone-number\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// import Register from './BackEnd_Connection/SignUp_API';\r\n\r\n// CSS :\r\nimport \"./SignUp.scss\";\r\n// import { RegisterHeader } from \"../env\";\r\n\r\nconst Style = makeStyles({\r\n  btn: {\r\n    margin: \"0.5rem 0\",\r\n    width: \"100%\",\r\n    background: \"red\",\r\n    height: \"3rem\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      color: \"red\",\r\n      transition: \".5s ease-in-out\"\r\n    }\r\n  },\r\n  logbtn: {\r\n    color: \"yellow\",\r\n    fontWeight: \"bolder\",\r\n    margin: \"0 5px\",\r\n    \"&:hover\": {\r\n      color: \"black\"\r\n    }\r\n  },\r\n  disbtn: {\r\n    background: \"rgb(0,0,0, 0.38)\",\r\n    width: \"100%\",\r\n    height: \"3rem\"\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n    fontSize: \"smaller\"\r\n\r\n  }\r\n})\r\n\r\n\r\nconst SignUp = () => {\r\n  const classes = Style();\r\n\r\n\r\n  // Form Data Control :\r\n  const [enteredData, updateEnteredData] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  })\r\n\r\n\r\n  const [error, updateError] = useState({\r\n    firstnameError: \"\",\r\n    lastnameError: \"\",\r\n    emailError: \"\",\r\n    passwordError: \"\",\r\n    confirmPasswordError: \"\"\r\n  })\r\n\r\n  const enteringData = (event) => {\r\n\r\n    const { value, name } = event.target;\r\n\r\n    switch (name) {\r\n      case \"firstname\":\r\n        updateEnteredData((preValue) => {\r\n          return {\r\n            ...preValue,\r\n            [name]: value\r\n          }\r\n        })\r\n        if (!enteredData.firstname || enteredData.firstname.length < 3) {\r\n          updateError((preValue) => {\r\n            return {\r\n              ...preValue,\r\n              firstnameError: \"First Name Must be more than 3 Characters\"\r\n            }\r\n          })\r\n        } else {\r\n          updateError((preValue) => {\r\n            return {\r\n              ...preValue,\r\n              firstnameError: \"\"\r\n            }\r\n          })\r\n        }\r\n        break;\r\n\r\n      case \"lastname\":\r\n        updateEnteredData((preValue) => {\r\n          return {\r\n            ...preValue,\r\n            [name]: value\r\n          }\r\n        })\r\n        if (!enteredData.lastname || enteredData.lastname.length < 3) {\r\n          updateError((preValue) => {\r\n            return {\r\n              ...preValue,\r\n              lastnameError: \"Last Name Must be more than 3 Characters\"\r\n            }\r\n          })\r\n        } else {\r\n          updateError((preValue) => {\r\n            return {\r\n              ...preValue,\r\n              lastnameError: \"\"\r\n            }\r\n          })\r\n        }\r\n        break;\r\n\r\n      case \"email\":\r\n        updateEnteredData((preValue) => {\r\n          return {\r\n            ...preValue,\r\n            [name]: value\r\n          }\r\n        })\r\n        if (/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(enteredData.email)) {\r\n          updateError((preValue) => {\r\n            return {\r\n              ...preValue,\r\n              emailError: \"\"\r\n            }\r\n          })\r\n        } else {\r\n          updateError((preValue) => {\r\n            return {\r\n              ...preValue,\r\n              emailError: \"Invalid Email\"\r\n            }\r\n          })\r\n        }\r\n        break;\r\n\r\n      case \"password\":\r\n        updateEnteredData((preValue) => {\r\n          return {\r\n            ...preValue,\r\n            [name]: value\r\n          }\r\n        })\r\n        if (!enteredData.password || enteredData.password.length < 8) {\r\n          updateError((preValue) => {\r\n            return {\r\n              ...preValue,\r\n              passwordError: \"Password Must be more than 8 Characters\"\r\n            }\r\n          })\r\n        } else {\r\n          updateError((preValue) => {\r\n            return {\r\n              ...preValue,\r\n              passwordError: \"\"\r\n            }\r\n          })\r\n        }\r\n        break;\r\n\r\n      case \"confirmPassword\":\r\n        updateEnteredData((preValue) => {\r\n          return {\r\n            ...preValue,\r\n            [name]: value\r\n          }\r\n        })\r\n        if (enteredData.confirmPassword !== enteredData.password) {\r\n          updateError((preValue) => {\r\n            return {\r\n              ...preValue,\r\n              confirmPasswordError: \"Password did not Match\"\r\n            }\r\n          })\r\n        } else {\r\n          updateError((preValue) => {\r\n            return {\r\n              ...preValue,\r\n              confirmPasswordError: \"\"\r\n            }\r\n          })\r\n        }\r\n        break;\r\n\r\n      default:\r\n        console.log(\"Sonthing went wrong\")\r\n        break;\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  // Show Hide Password :\r\n  const [showPV, updateShowPV] = useState({\r\n    showP: false\r\n  })\r\n  const [showCPV, updateShowCPV] = useState({\r\n    showCP: false\r\n  })\r\n\r\n  const clikShowP = () => {\r\n    updateShowPV({\r\n      showP: !showPV.showP\r\n    })\r\n  }\r\n  const clikShowCP = () => {\r\n    updateShowCPV({\r\n      showCP: !showCPV.showCP\r\n    })\r\n  }\r\n\r\n\r\n  const submit = (data) => {\r\n    data.preventDefault();\r\n    updateEnteredData({\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\"\r\n    })\r\n\r\n  }\r\n  // ------------------------USER REGISTER------------------------\r\n  // const userRegister = async () => {\r\n  //   await axois({\r\n  //     method: \"post\",\r\n  //     url: \"http://127.0.01:8000/api/register/\",\r\n  //     // headers: RegisterHeader,\r\n  //     data: {\r\n  //       \"username\": enteredData.firstname,\r\n  //       \"password\": enteredData.password,\r\n  //       \"first_name\": enteredData.firstname,\r\n  //       \"last_name\": enteredData.lastname,\r\n  //       \"email\": enteredData.email\r\n  //     }\r\n  //   }).then((res) => {\r\n  //     console.log(\"The Register DATA = \", res)\r\n  //   })\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"signup_container\">\r\n      <div className=\"login_btn_container\">\r\n                    <NavLink to=\"/login\" style={{ textDecoration: \"none\" }}>\r\n                        <Button\r\n                            id=\"logbtn\"\r\n                            variant=\"contained\"\r\n                            endIcon={<SharpIcon />}\r\n                            className={classes.btn}\r\n                        >\r\n                            Already Have an Account <span className={classes.logbtn}> LOG IN</span>\r\n                        </Button>\r\n                    </NavLink>\r\n                </div>\r\n        <div className=\"signup_box\">\r\n          <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n            SIGN-UP\r\n        </Typography>\r\n\r\n          <form className=\"form\" onSubmit={submit} autoComplete=\"off\">\r\n            <TextField\r\n              label=\"First Name\"\r\n              variant=\"outlined\"\r\n              name=\"firstname\"\r\n              value={enteredData.firstname}\r\n              onChange={enteringData}\r\n              style={{ margin: \".5rem 0\", width: \"100%\" }}\r\n            />\r\n            <Typography className={classes.error}> {error.firstnameError} </Typography>\r\n            <TextField\r\n              label=\"Last Name\"\r\n              variant=\"outlined\"\r\n              name=\"lastname\"\r\n              value={enteredData.lastname}\r\n              onChange={enteringData}\r\n              style={{ width: \"100%\", margin: \"0.5rem 0rem 1rem 0rem\" }}\r\n            />\r\n            <Typography style={{ paddingBottom: \"0.5rem\" }} className={classes.error}> {error.lastnameError} </Typography>\r\n\r\n            <Phone\r\n              variant=\"outlined\"\r\n              defaultCountry={'pk'}\r\n              onlyCountries={['pk']}\r\n              style={{ width: \"100%\" }}\r\n\r\n            />\r\n\r\n            <TextField\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              name=\"email\"\r\n              value={enteredData.email}\r\n              onChange={enteringData}\r\n              style={{ width: \"100%\", margin: \"1rem 0 0.5rem 0\" }}\r\n            />\r\n            <Typography className={classes.error}> {error.emailError} </Typography>\r\n\r\n            <FormControl style={{ margin: \"0.5rem 0\", width: \"100%\" }} variant=\"outlined\">\r\n              <InputLabel>Password</InputLabel>\r\n              <OutlinedInput\r\n                name=\"password\"\r\n                value={enteredData.password}\r\n                onChange={enteringData}\r\n                type={showPV.showP ? \"text\" : \"password\"}\r\n                labelWidth={70}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton edge=\"end\" onClick={clikShowP}>\r\n                      {showPV.showP ? <Show /> : <Hide />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n\r\n            <Typography className={classes.error}> {error.passwordError} </Typography>\r\n\r\n            <FormControl style={{ margin: \"0.5rem 0\", width: \"100%\" }} variant=\"outlined\">\r\n              <InputLabel>Confirm Password</InputLabel>\r\n              <OutlinedInput\r\n                name=\"confirmPassword\"\r\n                value={enteredData.confirmPassword}\r\n                onChange={enteringData}\r\n                type={showCPV.showCP ? \"text\" : \"password\"}\r\n                labelWidth={130}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton edge=\"end\" onClick={clikShowCP}>\r\n                      {showCPV.showCP ? <Show /> : <Hide />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n\r\n            <Typography className={classes.error}> {enteredData.confirmPassword !== enteredData.password ? \"Password did not Match\" : \"\"} </Typography>\r\n\r\n            {\r\n              enteredData.firstname &&\r\n                enteredData.lastname &&\r\n                enteredData.email &&\r\n                enteredData.password &&\r\n                enteredData.confirmPassword &&\r\n                !error.firstnameError &&\r\n                !error.lastnameError &&\r\n                !error.emailError &&\r\n                !error.passwordError &&\r\n                (enteredData.confirmPassword == enteredData.password)\r\n                ?\r\n                (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    endIcon={<SharpIcon />}\r\n                    className={classes.btn}\r\n                    // onClick={userRegister}\r\n                  >\r\n                    SIGN UP\r\n                  </Button>\r\n                )\r\n                :\r\n                <Button\r\n                  variant=\"contained\"\r\n                  disabled\r\n                  endIcon={<BlockIcon />}\r\n                  className={classes.disbtn}\r\n                >\r\n                  SIGN UP\r\n                  </Button>\r\n            }\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}